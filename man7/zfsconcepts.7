.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or https://opensource.org/licenses/CDDL-1.0.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright (c) 2009 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 2011 Joshua M. Clulow <josh@sysmgr.org>
.\" Copyright (c) 2011, 2019 by Delphix. All rights reserved.
.\" Copyright (c) 2013 by Saso Kiselkov. All rights reserved.
.\" Copyright (c) 2014, Joyent, Inc. All rights reserved.
.\" Copyright (c) 2014 by Adam Stevko. All rights reserved.
.\" Copyright (c) 2014 Integros [integros.com]
.\" Copyright 2019 Richard Laager. All rights reserved.
.\" Copyright 2018 Nexenta Systems, Inc.
.\" Copyright 2019 Joyent, Inc.
.\" Copyright 2023 Klara, Inc.
.\"
.Dd October 6, 2023
.Dt ZFSCONCEPTS 7
.Os
.
.Sh ИМЯ
.Nm zfsconcepts
.Nd обзор концепций ZFS
.
.Sh ОПИСАНИЕ
.Ss Иерархия файловой системы ZFS
Пул хранения ZFS - это логическая группа устройств, предоставляющих место для
наборов данных.
Пул хранения также является корнем иерархии файловой системы ZFS.
.Pp
К корню пула можно обращаться как к файловой системе, например монтировать и размонтирование, создание моментальных снимков и установка свойств.
Однако физическими характеристиками хранилища управляет
.Xr zpool 8
команда.
.Pp
См.
.Xr zpool 8
для получения дополнительной информации о создании и администрировании пулов.
.Ss Снимки
Снимок - это копия файловой системы или тома, доступная только для чтения.
Снимки можно создавать очень быстро, и первоначально они не занимают дополнительного
места в пуле.
По мере изменения данных в активном наборе данных снимок потребляет больше данных,
чем 
в ином случае он был бы так же использован с активным набором данных.
.Pp
Снимки могут иметь произвольные имена.
Снимки томов можно клонировать или откатывать, видимость определяется
по
.Sy snapdev
свойства родительского тома.
.Pp
Доступ к моментальным снимкам файловой системы можно получить по адресу
.Pa .zfs/snapshot
в корневой директории файловой системы.
Снимки автоматически монтируются по требованию и могут быть размонтированы через определенные
промежутки времени.
Видимость каталога
.Pa .zfs
можно контролировать с помощью параметра
.Sy snapdir
свойством.
.Ss Закладки 
Закладка - это как моментальный снимок, копия файловой системы или тома, доступная только для чтения.
Закладки можно создавать очень быстро, в отличие от моментальных снимков, и они
не занимают дополнительного места в пуле.
Закладки также могут иметь произвольные имена, как и моментальные снимки.
.Pp
В отличие от моментальных снимков, к закладкам нельзя получить доступ через файловую систему каким-либо
образом.
С точки зрения хранения, закладка просто предоставляет возможность указать,
когда моментальный снимок был создан как отдельный объект.
Закладки изначально привязаны к моментальному снимку, а не к файловой системе или тому,
и они сохранятся, если сам снимок будет уничтожен.
Поскольку они имеют очень малый вес, нет особого смысла их уничтожать.
.Ss Клоны 
Клон - это доступный для записи том или файловая система, начальное содержимое которых совпадает с содержимым другого набора данных.
Как и в случае моментальных снимков, создание клона происходит практически мгновенно, и первоначально
не занимает дополнительного места.
.Pp
Клоны можно создавать только из моментальных снимков.
При клонировании моментального снимка создается неявная зависимость между родительским
и дочерним.
Даже если клон создается в другом месте иерархии набора данных, исходный снимок не может быть уничтожен.
оригинальный моментальный снимок не может быть уничтожен, пока существует его клон.
Адрес
.Sy origin
раскрывает эту зависимость, а свойство
.Cm destroy
перечисляет все подобные зависимости, если они существуют.
.Pp
Отношения зависимости между родителями и детьми клонов можно изменить на противоположные с помощью команды
.Cm promote
подкоманды.
Это приводит к тому, что
.Qq origin
файловая система становится клоном указанной файловой системы, что позволяет уничтожить файловую систему, на основе которой был создан клон.
.Ss "Точки монтирования"
Создание файловой системы ZFS - простая операция, поэтому количество точек монтирования может быть ограничено.
На одну систему может приходиться множество файлов.
Чтобы справиться с этой проблемой, ZFS автоматически управляет монтированием и размонтированием файловых
систем без необходимости редактировать
.Pa /etc/fstab
файл.
Все автоматически управляемые файловые системы монтируются ZFS во время загрузки.
.Pp
По умолчанию файловые системы монтируются в каталог
.Pa /path ,
где
.Ar путь
это имя файловой системы в пространстве имен ZFS.
Каталоги создаются и уничтожаются по мере необходимости.
.Pp
Файловая система также может иметь точку монтирования, заданную в параметре
.Sy mountpoint
Этот каталог создается по мере необходимости, и ZFS автоматически монтирует файловую систему, когда
.Nm zfs Cm mount Fl a
команда
.Po без редактирования
.Pa /etc/fstab
.Pc .
Cвойство
.Sy mountpoint
может быть унаследована, поэтому если
.Em pool/home
имеет точку монтирования
.Pa /export/stuff ,
то
.Em pool/home/user
автоматически наследует точку монтирования
.Pa /export/stuff/user .
.Pp
Файловая система
.Sy mountpoint
свойство
.Sy none
предотвращает монтирование файловой системы.
.Pp
При необходимости файловыми системами ZFS можно управлять и с помощью традиционных инструментов
.Po
.Nm mount ,
.Nm umount ,
.Pa /etc/fstab
.Pc .
Если для точки монтирования файловой системы установлено значение
.Sy legacy ,
ZFS не пытается управлять файловой системой, и администратор несет ответственность за
монтирование и размонтирование файловой системы.
Поскольку пулы должны быть импортированы до успешного монтирования, администраторы должны убедиться, что что попытки устаревшего монтирования выполняются только после завершения процесса импорта zpool
во время загрузки.
Например, на машинах, использующих systemd, параметр mount
.Pp
.Nm x-systemd.requires=zfs-import.target
.Pp
обеспечит завершение zfs-импорта до того, как systemd попытается смонтировать
файловой системы.
См.
.Xr systemd.mount 5
для получения подробной информации.
.Ss Дедупликация 
Дедупликация - это процесс удаления избыточных данных на уровне блоков,
уменьшая общий объем хранимых данных.
Если файловая система имеет параметр
.Sy dedup
включено свойство dedup, дубликаты блоков данных удаляются одновременно.
В результате
хранятся только уникальные данные, а общие компоненты разделяются между файлами.
.Pp
Дедублирование данных - очень ресурсоемкая операция.
Обычно рекомендуется иметь не менее 1,25 Гбайт оперативной памяти
на 1 Тбайт хранилища при включенной дедупликации.
Расчет точных требований в значительной степени зависит
от типа данных, хранящихся в пуле.
.Pp
Включение дедупликации в неправильно спроектированной системе может привести к
проблемам с производительностью (медленный ввод-вывод и административные операции).
Это может привести к проблемам с импортом пула из-за исчерпания памяти.
Дедупликация может потреблять значительную вычислительную мощность (ЦП) и память, а также генерировать дополнительные дисковые операции ввода-вывода.
.Pp
Прежде чем создавать пул с включенной дедупликацией, убедитесь, что вы правильно спланировали
требования к аппаратному обеспечению и внедрили соответствующие методы восстановления,
например, регулярное резервное копирование.
Рассмотрите возможность использования свойства
.Sy compression
в качестве менее ресурсоемкой альтернативы.
.Ss Клонирование блоков 
Блочное клонирование - это средство, позволяющее клонировать файл (или части файла)
.Qq клонировать,
то есть неглубокое копирование, при котором на существующие блоки данных ссылаются
а не копируются.
Последующие модификации данных приведут к созданию копии блока данных
и модификации этой копии.
Эта возможность используется для реализации
.Qq перелинковки 
или
.Qq копирования на уровне файла при записи.
.Pp
Клонированные блоки отслеживаются в специальной структуре на диске под названием Block
справочная таблица
.Po BRT
.Pc .
В отличие от дедупликации, эта таблица имеет минимальные накладные расходы, поэтому может быть включена в любое время
всегда.
.Pp
Также в отличие от дедупликации, клонирование должно быть запрошено пользовательской программой.
Многие распространенные программы копирования файлов, включая новые версии
.Nm /bin/cp ,
будут пытаться создавать клоны автоматически.
Ищите
.Qq clone ,
.Qq dedupe
или
.Qq reflink
в документации для получения дополнительной информации.
.Pp
Клонирование блоков имеет некоторые ограничения.
Можно клонировать только целые блоки, и нельзя клонировать блоки, если они еще не записаны на диск, или если они зашифрованы, или если источник и место назначения
.Sy recordsize
отличаются.
ОС может добавлять дополнительные ограничения;
например, большинство версий Linux не разрешают клонировать наборы данных.
